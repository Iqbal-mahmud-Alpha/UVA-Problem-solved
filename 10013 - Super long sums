#include<bits/stdc++.h>
using namespace std;
#define faster         ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define mem(a,b)       memset(a,b,sizeof(a))
#define ff first
#define ss second
#define     all(x)      x.begin(),x.end()
#define pr pair<ll,ll>
#define pb push_back
#define gcd(a,b)    __gcd(a,b)
#define lcm(a,b)    (a*(b/gcd(a,b)))
#define mod  1000000007

/**------- Char Chk----------*/
bool is_lower(char ch)
{
    if(ch>='a' && ch<='z') return true;
    return false;
}
bool is_upper(char ch)
{
    if(ch>='A' && ch<='Z') return true;
    return false;
}
bool is_digit(char ch)
{
    if(ch>='0' && ch<='9') return true;
    return false;
}

/**----data type----*/
typedef long long int ll;
typedef unsigned long long int llu;

string add(string str1, string str2)
{
    if (str1.length() > str2.length())
        swap(str1, str2);

    string str = "";


    int n1 = str1.length(), n2 = str2.length();

    reverse(str1.begin(), str1.end());
    reverse(str2.begin(), str2.end());

    int carry = 0;
    for (int i=0; i<n1; i++)
    {

        int sum = ((str1[i]-'0')+(str2[i]-'0')+carry);
        str.push_back(sum%10 + '0');

        carry = sum/10;
    }

    for (int i=n1; i<n2; i++)
    {
        int sum = ((str2[i]-'0')+carry);
        str.push_back(sum%10 + '0');
        carry = sum/10;
    }

    if (carry)
        str.push_back(carry+'0');

    reverse(str.begin(), str.end());

    return str;
}
int main()
{
    int tc,m;
    char f,s;
    cin>>tc;
    cin.ignore();
    int flag=0;
    while(tc--)
    {
        cin>>m;
        cin.ignore();
        vector<pair<char,char>>v;
        for(int i=1; i<=m; i++)
        {
            cin>>f>>s;
            v.pb(make_pair(f,s));
        }
        string first,second;
        for(auto i:v)
        {
            first+=i.ff;
            second+=i.ss;
        }
        string ans=add(first,second);
        int i=0;
        if(ans[0]=='0')
        {
            for( i=0; i<ans.size(); i++)
            {
                if(ans[i]!='0')
                {
                    break;
                }

            }
        }
        ans=ans.substr(i,ans.size());
        int cnt;
        if(ans.size()!=m)
        {
            cnt=m-ans.size();
            for(int i=1; i<=cnt; i++)
            {
                ans+='0';
            }
        }
        cout<<ans<<endl;
        if(tc>0)cout<<endl;
    }
}

